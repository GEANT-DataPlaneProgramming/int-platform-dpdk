#!/bin/sh

SRC=$1
# pwd to the compiler
P4C="../../../p4c/build/p4c-dpdk"

# pwd to the interpret
PIPE="../../../dpdk-21.05/examples/pipeline/build/pipeline"

# Set interfaces
# IFC0="--vdev=net_tap,iface=int_primo"
IFC1="--vdev=net_tap3,iface=int_in"
IFC2="--vdev=net_tap2,iface=int_out"
#PARAM="$IFC0 $IFC1 $IFC2"
PARAM="$IFC1 $IFC2"

# Configuration parametrs
# More in dpdk documentation
CONF="-s $SRC-cli"

echo "HELP: ./script file-name [no|yes|run]"
echo "\t file-name name without sufix for example if we want to run v1model.p4 you should only enter v1model"
echo "\t [no|yes|run]" 
echo "\t\tno  - compilation only"
echo "\t\tyes - default value, everything except no or run is yes"
echo "\t\trun - run code without compilation (note, there have to be file file-name.spec)"
echo "\t This script also repares some typos generated by compiler. These typos are only at sink.p4"

REPARE="yes"

if [ $REPARE = "yes" ] && [ $SRC = "sink" ]
then
    SPEC_FILE="tmp.not-spec"
else
    SPEC_FILE="$SRC.spec"
    REPARE="no"
fi

if [ $# -lt 2 ]
then
    RUN="yes"
else
    RUN=$2
fi

if [ $RUN = "run" ] 
then
    echo "\nRunning $SRC-cli\n"
    sudo $PIPE $PARAM -- $CONF
    exit 0
fi

echo "\nCompiling... $SRC.p4 to $SPEC_FILE\n"
$P4C $SRC.p4 -o $SPEC_FILE
RET=$?

if [ $RET -eq 0 ] && [ $REPARE = "yes" ]
then
    echo "Reparing spec file"
    `rm -f $SRC.spec`
    while IFS= read -r line; do
        LINE=`echo $line | xargs`
        if [ "$LINE" = "add m.local_metadata_hops 0xff" ]
        then
            echo "\tsub m.local_metadata_hops 0x1" >> "$SRC.spec"
        elif [ "$LINE" = "verify 0 error.StackOutOfBounds" ]
        then
            echo ""
        elif [ "$LINE" = "add m.local_metadata_hops_16 0xffff" ]
        then
            echo "\tsub m.local_metadata_hops_16 0x1" >> "$SRC.spec"
        else
            echo "$line" >> "$SRC.spec"
        fi
    done < $SPEC_FILE
`rm -f tmp.not-spec`
fi

if [ $RET -eq 0 ]
then
    if [ $RUN != "no" ]
    then
        echo "\nRunning $SRC-cli\n"
        sudo $PIPE $PARAM -- $CONF
    fi
else
        echo "Compilation ERROR"
fi
